<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
                        http://www.springframework.org/schema/context 
      					http://www.springframework.org/schema/context/spring-context-3.0.xsd">
<context:annotation-config />
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/select**" access="hasAnyRole('ROLE_ADMIN','ROLE_TEACHER')" />
		<intercept-url pattern="/add**" access="hasAnyRole('ROLE_ADMIN','ROLE_TEACHER')" />
		<intercept-url pattern="/academicreports**" access="hasAnyRole('ROLE_ADMIN','ROLE_TEACHER')" />
		<intercept-url pattern="/notice/upload**" access="hasAnyRole('ROLE_ADMIN','ROLE_TEACHER')" />
		<intercept-url pattern="/jsonp/**" access="hasRole('ROLE_USER')" />
		<form-login default-target-url="/"
			authentication-failure-url="/loginfailed" />
		<logout logout-success-url="/" />
	</http>
	<beans:bean
		class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler" />
	
	<authentication-manager>
		<authentication-provider>
			<password-encoder hash="sha" />
			<jdbc-user-service data-source-ref="dataSource"

				users-by-username-query="
		      select username,password, enabled 
		      from users where username=?"

				authorities-by-username-query="
		      select username, authority from users 
		      where username =?  " />
		</authentication-provider>
	</authentication-manager>

</beans:beans>